import{S as vt,s as Mt,h as Z,g as pt,n as lt,u as ut,r as w,a as gt,b as bt,j as b,c as E,d as yt,D as Q,e as ct,f as St}from"./main-ZGQ9waUT.js";import{c as Vt,B as tt}from"./button-DetM-_rr.js";import{c as dt,a as Ft}from"./api--WybffIj.js";var wt=class extends vt{#s;#i=void 0;#t;#e;constructor(s,a){super(),this.#s=s,this.setOptions(a),this.bindMethods(),this.#r()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(s){const a=this.options;this.options=this.#s.defaultMutationOptions(s),Mt(this.options,a)||this.#s.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#t,observer:this}),a?.mutationKey&&this.options.mutationKey&&Z(a.mutationKey)!==Z(this.options.mutationKey)?this.reset():this.#t?.state.status==="pending"&&this.#t.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#t?.removeObserver(this)}onMutationUpdate(s){this.#r(),this.#a(s)}getCurrentResult(){return this.#i}reset(){this.#t?.removeObserver(this),this.#t=void 0,this.#r(),this.#a()}mutate(s,a){return this.#e=a,this.#t?.removeObserver(this),this.#t=this.#s.getMutationCache().build(this.#s,this.options),this.#t.addObserver(this),this.#t.execute(s)}#r(){const s=this.#t?.state??pt();this.#i={...s,isPending:s.status==="pending",isSuccess:s.status==="success",isError:s.status==="error",isIdle:s.status==="idle",mutate:this.mutate,reset:this.reset}}#a(s){lt.batch(()=>{if(this.#e&&this.hasListeners()){const a=this.#i.variables,t=this.#i.context;s?.type==="success"?(this.#e.onSuccess?.(s.data,a,t),this.#e.onSettled?.(s.data,null,a,t)):s?.type==="error"&&(this.#e.onError?.(s.error,a,t),this.#e.onSettled?.(void 0,s.error,a,t))}this.listeners.forEach(a=>{a(this.#i)})})}};function Et(s,a){const t=ut(),[i]=w.useState(()=>new wt(t,s));w.useEffect(()=>{i.setOptions(s)},[i,s]);const e=w.useSyncExternalStore(w.useCallback(n=>i.subscribe(lt.batchCalls(n)),[i]),()=>i.getCurrentResult(),()=>i.getCurrentResult()),r=w.useCallback((n,l)=>{i.mutate(n,l).catch(gt)},[i]);if(e.error&&bt(i.options.throwOnError,[e.error]))throw e.error;return{...e,mutate:r,mutateAsync:e.mutate}}function et({className:s,type:a,...t}){return b.jsx("input",{type:a,"data-slot":"input",className:dt("file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm","focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]","aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",s),...t})}var At=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","select","span","svg","ul"],Ot=At.reduce((s,a)=>{const t=Vt(`Primitive.${a}`),i=w.forwardRef((e,r)=>{const{asChild:n,...l}=e,d=n?t:a;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),b.jsx(d,{...l,ref:r})});return i.displayName=`Primitive.${a}`,{...s,[a]:i}},{}),Dt="Label",ht=w.forwardRef((s,a)=>b.jsx(Ot.label,{...s,ref:a,onMouseDown:t=>{t.target.closest("button, input, select, textarea")||(s.onMouseDown?.(t),!t.defaultPrevented&&t.detail>1&&t.preventDefault())}}));ht.displayName=Dt;var It=ht;function st({className:s,...a}){return b.jsx(It,{"data-slot":"label",className:dt("flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",s),...a})}function _(s,a){return typeof s=="function"?s(a):s}function x(s,a){return Y(a).reduce((i,e)=>{if(i===null)return null;if(typeof i<"u")return i[e]},s)}function P(s,a,t){const i=Y(a);function e(r){if(!i.length)return _(t,r);const n=i.shift();if(typeof n=="string"||typeof n=="number"&&!Array.isArray(r))return typeof r=="object"?(r===null&&(r={}),{...r,[n]:e(r[n])}):{[n]:e()};if(Array.isArray(r)&&typeof n=="number"){const l=r.slice(0,n);return[...l.length?l:new Array(n),e(r[n]),...r.slice(n+1)]}return[...new Array(n),e()]}return e(s)}function Ct(s,a){const t=Y(a);function i(e){if(!e)return;if(t.length===1){const n=t[0];if(Array.isArray(e)&&typeof n=="number")return e.filter((m,h)=>h!==n);const{[n]:l,...d}=e;return d}const r=t.shift();if(typeof r=="string"&&typeof e=="object")return{...e,[r]:i(e[r])};if(typeof r=="number"&&Array.isArray(e)){if(r>=e.length)return e;const n=e.slice(0,r);return[...n.length?n:new Array(r),i(e[r]),...e.slice(r+1)]}throw new Error("It seems we have created an infinite loop in deleteBy. ")}return i(s)}const kt=/^(\d+)$/gm,Lt=/\.(\d+)(?=\.)/gm,Tt=/^(\d+)\./gm,jt=/\.(\d+$)/gm,Bt=/\.{2,}/gm,H="__int__",$=`${H}$1`;function Y(s){if(Array.isArray(s))return[...s];if(typeof s!="string")throw new Error("Path must be a string.");return s.replace(/(^\[)|]/gm,"").replace(/\[/g,".").replace(kt,$).replace(Lt,`.${$}.`).replace(Tt,`${$}.`).replace(jt,`.${$}`).replace(Bt,".").split(".").map(a=>{if(a.startsWith(H)){const t=a.substring(H.length),i=parseInt(t,10);return String(i)===t?i:t}return a})}function xt(s){return!(Array.isArray(s)&&s.length===0)}function G(s,a){const t=i=>i.validators.filter(Boolean).map(e=>({cause:e.cause,validate:e.fn}));return a.validationLogic({form:a.form,validators:a.validators,event:{type:s,async:!1},runValidation:t})}function J(s,a){const{asyncDebounceMs:t}=a,{onBlurAsyncDebounceMs:i,onChangeAsyncDebounceMs:e,onDynamicAsyncDebounceMs:r}=a.validators||{},n=t??0,l=d=>d.validators.filter(Boolean).map(m=>{const h=m?.cause||s;let u=n;switch(h){case"change":u=e??n;break;case"blur":u=i??n;break;case"dynamic":u=r??n;break;case"submit":u=0;break}return s==="submit"&&(u=0),{cause:h,validate:m.fn,debounceMs:u}});return a.validationLogic({form:a.form,validators:a.validators,event:{type:s,async:!0},runValidation:l})}const X=s=>!!s&&typeof s=="object"&&"fields"in s;function C(s,a){if(Object.is(s,a))return!0;if(typeof s!="object"||s===null||typeof a!="object"||a===null)return!1;if(s instanceof Map&&a instanceof Map){if(s.size!==a.size)return!1;for(const[e,r]of s)if(!a.has(e)||!Object.is(r,a.get(e)))return!1;return!0}if(s instanceof Set&&a instanceof Set){if(s.size!==a.size)return!1;for(const e of s)if(!a.has(e))return!1;return!0}const t=Object.keys(s),i=Object.keys(a);if(t.length!==i.length)return!1;for(const e of t)if(!i.includes(e)||!C(s[e],a[e]))return!1;return!0}const it=({newFormValidatorError:s,isPreviousErrorFromFormValidator:a,previousErrorValue:t})=>s?{newErrorValue:s,newSource:"form"}:a?{newErrorValue:void 0,newSource:void 0}:t?{newErrorValue:t,newSource:"field"}:{newErrorValue:void 0,newSource:void 0},rt=({formLevelError:s,fieldLevelError:a})=>a?{newErrorValue:a,newSource:"field"}:s?{newErrorValue:s,newSource:"form"}:{newErrorValue:void 0,newSource:void 0},k=s=>{if(!s.validators)return s.runValidation({validators:[],form:s.form});const a=s.event.async,t=a?void 0:{fn:s.validators.onMount,cause:"mount"},i={fn:a?s.validators.onChangeAsync:s.validators.onChange,cause:"change"},e={fn:a?s.validators.onBlurAsync:s.validators.onBlur,cause:"blur"},r={fn:a?s.validators.onSubmitAsync:s.validators.onSubmit,cause:"submit"},n=a?void 0:{fn:()=>{},cause:"server"};switch(s.event.type){case"mount":return s.runValidation({validators:[t],form:s.form});case"submit":return s.runValidation({validators:[i,e,r,n],form:s.form});case"server":return s.runValidation({validators:[],form:s.form});case"blur":return s.runValidation({validators:[e,n],form:s.form});case"change":return s.runValidation({validators:[i,n],form:s.form});default:throw new Error(`Unknown validation event type: ${s.event.type}`)}};function Pt(s){const a=new Map;for(const t of s){const i=[...t.path??[]].map(e=>{const r=typeof e=="object"?e.key:e;return typeof r=="number"?`[${r}]`:r}).join(".").replace(/\.\[/g,"[");a.set(i,(a.get(i)??[]).concat(t))}return Object.fromEntries(a)}const at=s=>{const a=Pt(s);return{form:a,fields:a}},L={validate({value:s,validationSource:a},t){const i=t["~standard"].validate(s);if(i instanceof Promise)throw new Error("async function passed to sync validator");if(i.issues)return a==="field"?i.issues:at(i.issues)},async validateAsync({value:s,validationSource:a},t){const i=await t["~standard"].validate(s);if(i.issues)return a==="field"?i.issues:at(i.issues)}},ft=s=>!!s&&"~standard"in s,W={isValidating:!1,isTouched:!1,isBlurred:!1,isDirty:!1,isPristine:!0,isValid:!0,isDefaultValue:!0,errors:[],errorMap:{},errorSourceMap:{}};function K(s){function a(u,o,c,M){const f=i(u,o,c,M);({insert:()=>l(f,u,o),remove:()=>d(f),swap:()=>M!==void 0&&h(f,u,o,M),move:()=>M!==void 0&&m(f,u,o,M)})[c]()}function t(u,o){return`${u}[${o}]`}function i(u,o,c,M){const f=[t(u,o)];if(c==="swap")f.push(t(u,M));else if(c==="move"){const[v,p]=[Math.min(o,M),Math.max(o,M)];for(let g=v;g<=p;g++)f.push(t(u,g))}else{const v=s.getFieldValue(u),p=Array.isArray(v)?v.length:0;for(let g=o+1;g<p;g++)f.push(t(u,g))}return Object.keys(s.fieldInfo).filter(v=>f.some(p=>v.startsWith(p)))}function e(u,o){return u.replace(/\[(\d+)\]/,(c,M)=>{const f=parseInt(M,10);return`[${o==="up"?f+1:Math.max(0,f-1)}]`})}function r(u,o){(o==="up"?u:[...u].reverse()).forEach(M=>{const f=e(M.toString(),o),v=s.getFieldMeta(f);v?s.setFieldMeta(M,v):s.setFieldMeta(M,n())})}const n=()=>W,l=(u,o,c)=>{r(u,"down"),u.forEach(M=>{M.toString().startsWith(t(o,c))&&s.setFieldMeta(M,n())})},d=u=>{r(u,"up")},m=(u,o,c,M)=>{const f=new Map(Object.keys(s.fieldInfo).filter(v=>v.startsWith(t(o,c))).map(v=>[v,s.getFieldMeta(v)]));r(u,c<M?"up":"down"),Object.keys(s.fieldInfo).filter(v=>v.startsWith(t(o,M))).forEach(v=>{const p=v.replace(t(o,M),t(o,c)),g=f.get(p);g&&s.setFieldMeta(v,g)})},h=(u,o,c,M)=>{u.forEach(f=>{if(!f.toString().startsWith(t(o,c)))return;const v=f.toString().replace(t(o,c),t(o,M)),[p,g]=[s.getFieldMeta(f),s.getFieldMeta(v)];p&&s.setFieldMeta(v,p),g&&s.setFieldMeta(f,g)})};return{handleArrayFieldMetaShift:a}}function q(s){return{values:s.values??{},errorMap:s.errorMap??{},fieldMetaBase:s.fieldMetaBase??{},isSubmitted:s.isSubmitted??!1,isSubmitting:s.isSubmitting??!1,isValidating:s.isValidating??!1,submissionAttempts:s.submissionAttempts??0,isSubmitSuccessful:s.isSubmitSuccessful??!1,validationMetaMap:s.validationMetaMap??{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0,onDynamic:void 0}}}class $t{constructor(a){this.options={},this.fieldInfo={},this.prevTransformArray=[],this.mount=()=>{const t=this.fieldMetaDerived.mount(),i=this.store.mount(),e=()=>{t(),i()};this.options.listeners?.onMount?.({formApi:this});const{onMount:r}=this.options.validators||{};return r&&this.validateSync("mount"),e},this.update=t=>{if(!t)return;const i=this.options;this.options=t;const e=!!t.transform?.deps?.some((l,d)=>l!==this.prevTransformArray[d]),r=t.defaultValues&&!C(t.defaultValues,i.defaultValues)&&!this.state.isTouched,n=!C(t.defaultState,i.defaultState)&&!this.state.isTouched;!r&&!n&&!e||E(()=>{this.baseStore.setState(()=>q(Object.assign({},this.state,n?t.defaultState:{},r?{values:t.defaultValues}:{},e?{_force_re_eval:!this.state._force_re_eval}:{})))})},this.reset=(t,i)=>{const{fieldMeta:e}=this.state,r=this.resetFieldMeta(e);t&&!i?.keepDefaultValues&&(this.options={...this.options,defaultValues:t}),this.baseStore.setState(()=>q({...this.options.defaultState,values:t??this.options.defaultValues??this.options.defaultState?.values,fieldMetaBase:r}))},this.validateAllFields=async t=>{const i=[];return E(()=>{Object.values(this.fieldInfo).forEach(r=>{if(!r.instance)return;const n=r.instance;i.push(Promise.resolve().then(()=>n.validate(t,{skipFormValidation:!0}))),r.instance.state.meta.isTouched||r.instance.setMeta(l=>({...l,isTouched:!0}))})}),(await Promise.all(i)).flat()},this.validateArrayFieldsStartingFrom=async(t,i,e)=>{const r=this.getFieldValue(t),n=Array.isArray(r)?Math.max(r.length-1,0):null,l=[`${t}[${i}]`];for(let u=i+1;u<=(n??0);u++)l.push(`${t}[${u}]`);const d=Object.keys(this.fieldInfo).filter(u=>l.some(o=>u.startsWith(o))),m=[];return E(()=>{d.forEach(u=>{m.push(Promise.resolve().then(()=>this.validateField(u,e)))})}),(await Promise.all(m)).flat()},this.validateField=(t,i)=>{const e=this.fieldInfo[t]?.instance;return e?(e.state.meta.isTouched||e.setMeta(r=>({...r,isTouched:!0})),e.validate(i)):[]},this.validateSync=t=>{const i=G(t,{...this.options,form:this,validationLogic:this.options.validationLogic||k});let e=!1;const r={};return E(()=>{for(const d of i){if(!d.validate)continue;const m=this.runValidator({validate:d.validate,value:{value:this.state.values,formApi:this,validationSource:"form"},type:"validate"}),{formError:h,fieldErrors:u}=R(m),o=B(d.cause);for(const c of Object.keys(this.state.fieldMeta)){const M=this.getFieldMeta(c);if(!M)continue;const{errorMap:f,errorSourceMap:v}=M,p=u?.[c],{newErrorValue:g,newSource:S}=it({newFormValidatorError:p,isPreviousErrorFromFormValidator:v?.[o]==="form",previousErrorValue:f?.[o]});S==="form"&&(r[c]={...r[c],[o]:p}),f?.[o]!==g&&this.setFieldMeta(c,V=>({...V,errorMap:{...V.errorMap,[o]:g},errorSourceMap:{...V.errorSourceMap,[o]:S}}))}this.state.errorMap?.[o]!==h&&this.baseStore.setState(c=>({...c,errorMap:{...c.errorMap,[o]:h}})),(h||u)&&(e=!0)}const n=B("submit");this.state.errorMap?.[n]&&t!=="submit"&&!e&&this.baseStore.setState(d=>({...d,errorMap:{...d.errorMap,[n]:void 0}}));const l=B("server");this.state.errorMap?.[l]&&t!=="server"&&!e&&this.baseStore.setState(d=>({...d,errorMap:{...d.errorMap,[l]:void 0}}))}),{hasErrored:e,fieldsErrorMap:r}},this.validateAsync=async t=>{const i=J(t,{...this.options,form:this,validationLogic:this.options.validationLogic||k});this.state.isFormValidating||this.baseStore.setState(d=>({...d,isFormValidating:!0}));const e=[];let r;for(const d of i){if(!d.validate)continue;const m=B(d.cause);this.state.validationMetaMap[m]?.lastAbortController.abort();const u=new AbortController;this.state.validationMetaMap[m]={lastAbortController:u},e.push(new Promise(async o=>{let c;try{c=await new Promise((p,g)=>{setTimeout(async()=>{if(u.signal.aborted)return p(void 0);try{p(await this.runValidator({validate:d.validate,value:{value:this.state.values,formApi:this,validationSource:"form",signal:u.signal},type:"validateAsync"}))}catch(S){g(S)}},d.debounceMs)})}catch(p){c=p}const{formError:M,fieldErrors:f}=R(c);f&&(r=r?{...r,...f}:f);const v=B(d.cause);for(const p of Object.keys(this.state.fieldMeta)){const g=this.getFieldMeta(p);if(!g)continue;const{errorMap:S,errorSourceMap:V}=g,O=r?.[p],{newErrorValue:A,newSource:T}=it({newFormValidatorError:O,isPreviousErrorFromFormValidator:V?.[v]==="form",previousErrorValue:S?.[v]});S?.[v]!==A&&this.setFieldMeta(p,F=>({...F,errorMap:{...F.errorMap,[v]:A},errorSourceMap:{...F.errorSourceMap,[v]:T}}))}this.baseStore.setState(p=>({...p,errorMap:{...p.errorMap,[v]:M}})),o(r?{fieldErrors:r,errorMapKey:v}:void 0)}))}let n=[];const l={};if(e.length){n=await Promise.all(e);for(const d of n)if(d?.fieldErrors){const{errorMapKey:m}=d;for(const[h,u]of Object.entries(d.fieldErrors)){const c={...l[h]||{},[m]:u};l[h]=c}}}return this.baseStore.setState(d=>({...d,isFormValidating:!1})),l},this.validate=t=>{const{hasErrored:i,fieldsErrorMap:e}=this.validateSync(t);return i&&!this.options.asyncAlways?e:this.validateAsync(t)},this.getFieldValue=t=>x(this.state.values,t),this.getFieldMeta=t=>this.state.fieldMeta[t],this.getFieldInfo=t=>this.fieldInfo[t]||={instance:null,validationMetaMap:{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0,onDynamic:void 0}},this.setFieldMeta=(t,i)=>{this.baseStore.setState(e=>({...e,fieldMetaBase:{...e.fieldMetaBase,[t]:_(i,e.fieldMetaBase[t])}}))},this.resetFieldMeta=t=>Object.keys(t).reduce((i,e)=>{const r=e;return i[r]=W,i},{}),this.setFieldValue=(t,i,e)=>{const r=e?.dontUpdateMeta??!1;E(()=>{r||this.setFieldMeta(t,n=>({...n,isTouched:!0,isDirty:!0,errorMap:{...n?.errorMap,onMount:void 0}})),this.baseStore.setState(n=>({...n,values:P(n.values,t,i)}))})},this.deleteField=t=>{const e=[...Object.keys(this.fieldInfo).filter(r=>{const n=t.toString();return r!==n&&r.startsWith(n)}),t];this.baseStore.setState(r=>{const n={...r};return e.forEach(l=>{n.values=Ct(n.values,l),delete this.fieldInfo[l],delete n.fieldMetaBase[l]}),n})},this.pushFieldValue=(t,i,e)=>{this.setFieldValue(t,r=>[...Array.isArray(r)?r:[],i],e),this.validateField(t,"change")},this.insertFieldValue=async(t,i,e,r)=>{this.setFieldValue(t,n=>[...n.slice(0,i),e,...n.slice(i)],r),await this.validateField(t,"change"),K(this).handleArrayFieldMetaShift(t,i,"insert"),await this.validateArrayFieldsStartingFrom(t,i,"change")},this.replaceFieldValue=async(t,i,e,r)=>{this.setFieldValue(t,n=>n.map((l,d)=>d===i?e:l),r),await this.validateField(t,"change"),await this.validateArrayFieldsStartingFrom(t,i,"change")},this.removeFieldValue=async(t,i,e)=>{const r=this.getFieldValue(t),n=Array.isArray(r)?Math.max(r.length-1,0):null;if(this.setFieldValue(t,l=>l.filter((d,m)=>m!==i),e),K(this).handleArrayFieldMetaShift(t,i,"remove"),n!==null){const l=`${t}[${n}]`;this.deleteField(l)}await this.validateField(t,"change"),await this.validateArrayFieldsStartingFrom(t,i,"change")},this.swapFieldValues=(t,i,e,r)=>{this.setFieldValue(t,n=>{const l=n[i],d=n[e];return P(P(n,`${i}`,d),`${e}`,l)},r),K(this).handleArrayFieldMetaShift(t,i,"swap",e),this.validateField(t,"change"),this.validateField(`${t}[${i}]`,"change"),this.validateField(`${t}[${e}]`,"change")},this.moveFieldValues=(t,i,e,r)=>{this.setFieldValue(t,n=>{const l=[...n];return l.splice(e,0,l.splice(i,1)[0]),l},r),K(this).handleArrayFieldMetaShift(t,i,"move",e),this.validateField(t,"change"),this.validateField(`${t}[${i}]`,"change"),this.validateField(`${t}[${e}]`,"change")},this.clearFieldValues=(t,i)=>{const e=this.getFieldValue(t),r=Array.isArray(e)?Math.max(e.length-1,0):null;if(this.setFieldValue(t,[],i),r!==null)for(let n=0;n<=r;n++){const l=`${t}[${n}]`;this.deleteField(l)}this.validateField(t,"change")},this.resetField=t=>{this.baseStore.setState(i=>({...i,fieldMetaBase:{...i.fieldMetaBase,[t]:W},values:this.options.defaultValues?P(i.values,t,x(this.options.defaultValues,t)):i.values}))},this.getAllErrors=()=>({form:{errors:this.state.errors,errorMap:this.state.errorMap},fields:Object.entries(this.state.fieldMeta).reduce((t,[i,e])=>(Object.keys(e).length&&e.errors.length&&(t[i]={errors:e.errors,errorMap:e.errorMap}),t),{})}),this.parseValuesWithSchema=t=>L.validate({value:this.state.values,validationSource:"form"},t),this.parseValuesWithSchemaAsync=t=>L.validateAsync({value:this.state.values,validationSource:"form"},t),this.baseStore=new yt(q({...a?.defaultState,values:a?.defaultValues??a?.defaultState?.values})),this.fieldMetaDerived=new Q({deps:[this.baseStore],fn:({prevDepVals:t,currDepVals:i,prevVal:e})=>{const r=e,n=t?.[0],l=i[0];let d=0;const m={};for(const h of Object.keys(l.fieldMetaBase)){const u=l.fieldMetaBase[h],o=n?.fieldMetaBase[h],c=r?.[h],M=x(l.values,h);let f=c?.errors;if(!o||u.errorMap!==o.errorMap){f=Object.values(u.errorMap??{}).filter(V=>V!==void 0);const S=this.getFieldInfo(h)?.instance;S&&!S.options.disableErrorFlat&&(f=f?.flat(1))}const v=!xt(f??[]),p=!u.isDirty,g=C(M,x(this.options.defaultValues,h))||C(M,this.getFieldInfo(h)?.instance?.options.defaultValue);if(c&&c.isPristine===p&&c.isValid===v&&c.isDefaultValue===g&&c.errors===f&&u===o){m[h]=c,d++;continue}m[h]={...u,errors:f,isPristine:p,isValid:v,isDefaultValue:g}}return Object.keys(l.fieldMetaBase).length&&r&&d===Object.keys(l.fieldMetaBase).length?r:m}}),this.store=new Q({deps:[this.baseStore,this.fieldMetaDerived],fn:({prevDepVals:t,currDepVals:i,prevVal:e})=>{const r=e,n=t?.[0],l=i[0],d=i[1],m=Object.values(d).filter(Boolean),h=m.some(y=>y.isValidating),u=m.every(y=>y.isValid),o=m.some(y=>y.isTouched),c=m.some(y=>y.isBlurred),M=m.every(y=>y.isDefaultValue),f=o&&l.errorMap?.onMount,v=m.some(y=>y.isDirty),p=!v,g=!!(l.errorMap?.onMount||m.some(y=>y?.errorMap?.onMount)),S=!!h;let V=r?.errors??[];(!n||l.errorMap!==n.errorMap)&&(V=Object.values(l.errorMap).reduce((y,D)=>D===void 0?y:D&&X(D)?(y.push(D.form),y):(y.push(D),y),[]));const O=V.length===0,A=u&&O,T=this.options.canSubmitWhenInvalid??!1,F=l.submissionAttempts===0&&!o&&!g||!S&&!l.isSubmitting&&A||T;let I=l.errorMap;if(f&&(V=V.filter(y=>y!==l.errorMap.onMount),I=Object.assign(I,{onMount:void 0})),r&&n&&r.errorMap===I&&r.fieldMeta===this.fieldMetaDerived.state&&r.errors===V&&r.isFieldsValidating===h&&r.isFieldsValid===u&&r.isFormValid===O&&r.isValid===A&&r.canSubmit===F&&r.isTouched===o&&r.isBlurred===c&&r.isPristine===p&&r.isDefaultValue===M&&r.isDirty===v&&C(n,l))return r;let j={...l,errorMap:I,fieldMeta:this.fieldMetaDerived.state,errors:V,isFieldsValidating:h,isFieldsValid:u,isFormValid:O,isValid:A,canSubmit:F,isTouched:o,isBlurred:c,isPristine:p,isDefaultValue:M,isDirty:v};const z=this.options.transform?.deps??[];if(z.length!==this.prevTransformArray.length||z.some((y,D)=>y!==this.prevTransformArray[D])){const y=Object.assign({},this,{state:j});this.options.transform?.fn(y),j=y.state,this.prevTransformArray=z}return j}}),this.handleSubmit=this.handleSubmit.bind(this),this.update(a||{})}get state(){return this.store.state}get formId(){return this.options.formId}runValidator(a){return ft(a.validate)?L[a.type](a.value,a.validate):a.validate(a.value)}async handleSubmit(a){if(this.baseStore.setState(e=>({...e,isSubmitted:!1,submissionAttempts:e.submissionAttempts+1,isSubmitSuccessful:!1})),E(()=>{Object.values(this.fieldInfo).forEach(e=>{e.instance&&(e.instance.state.meta.isTouched||e.instance.setMeta(r=>({...r,isTouched:!0})))})}),!this.state.canSubmit)return;const t=a??this.options.onSubmitMeta;this.baseStore.setState(e=>({...e,isSubmitting:!0}));const i=()=>{this.baseStore.setState(e=>({...e,isSubmitting:!1}))};if(await this.validateAllFields("submit"),!this.state.isFieldsValid){i(),this.options.onSubmitInvalid?.({value:this.state.values,formApi:this,meta:t});return}if(await this.validate("submit"),!this.state.isValid){i(),this.options.onSubmitInvalid?.({value:this.state.values,formApi:this,meta:t});return}E(()=>{Object.values(this.fieldInfo).forEach(e=>{e.instance?.options.listeners?.onSubmit?.({value:e.instance.state.value,fieldApi:e.instance})})}),this.options.listeners?.onSubmit?.({formApi:this,meta:t});try{await this.options.onSubmit?.({value:this.state.values,formApi:this,meta:t}),E(()=>{this.baseStore.setState(e=>({...e,isSubmitted:!0,isSubmitSuccessful:!0})),i()})}catch(e){throw this.baseStore.setState(r=>({...r,isSubmitSuccessful:!1})),i(),e}}setErrorMap(a){E(()=>{Object.entries(a).forEach(([t,i])=>{const e=t;if(X(i)){const{formError:r,fieldErrors:n}=R(i);for(const l of Object.keys(this.fieldInfo))this.getFieldMeta(l)&&this.setFieldMeta(l,m=>({...m,errorMap:{...m.errorMap,[e]:n?.[l]},errorSourceMap:{...m.errorSourceMap,[e]:"form"}}));this.baseStore.setState(l=>({...l,errorMap:{...l.errorMap,[e]:r}}))}else this.baseStore.setState(r=>({...r,errorMap:{...r.errorMap,[e]:i}}))})})}}function R(s){if(s){if(X(s)){const a=R(s.form).formError,t=s.fields;return{formError:a,fieldErrors:t}}return{formError:s}}return{formError:void 0}}function B(s){switch(s){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";case"dynamic":return"onDynamic";case"change":default:return"onChange"}}class Kt{constructor(a){this.options={},this.mount=()=>{const t=this.store.mount();this.options.defaultValue!==void 0&&this.form.setFieldValue(this.name,this.options.defaultValue,{dontUpdateMeta:!0});const i=this.getInfo();i.instance=this,this.update(this.options);const{onMount:e}=this.options.validators||{};if(e){const r=this.runValidator({validate:e,value:{value:this.state.value,fieldApi:this,validationSource:"field"},type:"validate"});r&&this.setMeta(n=>({...n,errorMap:{...n?.errorMap,onMount:r},errorSourceMap:{...n?.errorSourceMap,onMount:"field"}}))}return this.options.listeners?.onMount?.({value:this.state.value,fieldApi:this}),t},this.update=t=>{this.options=t;const i=this.name!==t.name;if(this.name=t.name,this.state.value===void 0){const e=x(t.form.options.defaultValues,t.name),r=t.defaultValue??e;i?this.setValue(n=>n||r,{dontUpdateMeta:!0}):r!==void 0&&this.setValue(r,{dontUpdateMeta:!0})}this.form.getFieldMeta(this.name)===void 0&&this.setMeta(this.state.meta)},this.getValue=()=>this.form.getFieldValue(this.name),this.setValue=(t,i)=>{this.form.setFieldValue(this.name,t,i),this.triggerOnChangeListener(),this.validate("change")},this.getMeta=()=>this.store.state.meta,this.setMeta=t=>this.form.setFieldMeta(this.name,t),this.getInfo=()=>this.form.getFieldInfo(this.name),this.pushValue=(t,i)=>{this.form.pushFieldValue(this.name,t,i),this.triggerOnChangeListener()},this.insertValue=(t,i,e)=>{this.form.insertFieldValue(this.name,t,i,e),this.triggerOnChangeListener()},this.replaceValue=(t,i,e)=>{this.form.replaceFieldValue(this.name,t,i,e),this.triggerOnChangeListener()},this.removeValue=(t,i)=>{this.form.removeFieldValue(this.name,t,i),this.triggerOnChangeListener()},this.swapValues=(t,i,e)=>{this.form.swapFieldValues(this.name,t,i,e),this.triggerOnChangeListener()},this.moveValue=(t,i,e)=>{this.form.moveFieldValues(this.name,t,i,e),this.triggerOnChangeListener()},this.clearValues=t=>{this.form.clearFieldValues(this.name,t),this.triggerOnChangeListener()},this.getLinkedFields=t=>{const i=Object.values(this.form.fieldInfo),e=[];for(const r of i){if(!r.instance)continue;const{onChangeListenTo:n,onBlurListenTo:l}=r.instance.options.validators||{};t==="change"&&n?.includes(this.name)&&e.push(r.instance),t==="blur"&&l?.includes(this.name)&&e.push(r.instance)}return e},this.validateSync=(t,i)=>{const e=G(t,{...this.options,form:this.form,validationLogic:this.form.options.validationLogic||k}),n=this.getLinkedFields(t).reduce((m,h)=>{const u=G(t,{...h.options,form:h.form,validationLogic:h.form.options.validationLogic||k});return u.forEach(o=>{o.field=h}),m.concat(u)},[]);let l=!1;E(()=>{const m=(h,u)=>{const o=N(u.cause),c=u.validate?nt(h.runValidator({validate:u.validate,value:{value:h.store.state.value,validationSource:"field",fieldApi:h},type:"validate"})):void 0,M=i[o],{newErrorValue:f,newSource:v}=rt({formLevelError:M,fieldLevelError:c});h.state.meta.errorMap?.[o]!==f&&h.setMeta(p=>({...p,errorMap:{...p.errorMap,[o]:f},errorSourceMap:{...p.errorSourceMap,[o]:v}})),f&&(l=!0)};for(const h of e)m(this,h);for(const h of n)h.validate&&m(h.field,h)});const d=N("submit");return this.state.meta.errorMap?.[d]&&t!=="submit"&&!l&&this.setMeta(m=>({...m,errorMap:{...m.errorMap,[d]:void 0},errorSourceMap:{...m.errorSourceMap,[d]:void 0}})),{hasErrored:l}},this.validateAsync=async(t,i)=>{const e=J(t,{...this.options,form:this.form,validationLogic:this.form.options.validationLogic||k}),r=await i,n=this.getLinkedFields(t),l=n.reduce((o,c)=>{const M=J(t,{...c.options,form:c.form,validationLogic:c.form.options.validationLogic||k});return M.forEach(f=>{f.field=c}),o.concat(M)},[]);this.state.meta.isValidating||this.setMeta(o=>({...o,isValidating:!0}));for(const o of n)o.setMeta(c=>({...c,isValidating:!0}));const d=[],m=[],h=(o,c,M)=>{const f=N(c.cause);o.getInfo().validationMetaMap[f]?.lastAbortController.abort();const p=new AbortController;this.getInfo().validationMetaMap[f]={lastAbortController:p},M.push(new Promise(async g=>{let S;try{S=await new Promise((F,I)=>{this.timeoutIds.validations[c.cause]&&clearTimeout(this.timeoutIds.validations[c.cause]),this.timeoutIds.validations[c.cause]=setTimeout(async()=>{if(p.signal.aborted)return F(void 0);try{F(await this.runValidator({validate:c.validate,value:{value:o.store.state.value,fieldApi:o,signal:p.signal,validationSource:"field"},type:"validateAsync"}))}catch(j){I(j)}},c.debounceMs)})}catch(F){S=F}if(p.signal.aborted)return g(void 0);const V=nt(S),O=r[this.name]?.[f],{newErrorValue:A,newSource:T}=rt({formLevelError:O,fieldLevelError:V});o.setMeta(F=>({...F,errorMap:{...F?.errorMap,[f]:A},errorSourceMap:{...F.errorSourceMap,[f]:T}})),g(A)}))};for(const o of e)o.validate&&h(this,o,d);for(const o of l)o.validate&&h(o.field,o,m);let u=[];(d.length||m.length)&&(u=await Promise.all(d),await Promise.all(m)),this.setMeta(o=>({...o,isValidating:!1}));for(const o of n)o.setMeta(c=>({...c,isValidating:!1}));return u.filter(Boolean)},this.validate=(t,i)=>{if(!this.state.meta.isTouched)return[];const{fieldsErrorMap:e}=i?.skipFormValidation?{fieldsErrorMap:{}}:this.form.validateSync(t),{hasErrored:r}=this.validateSync(t,e[this.name]??{});if(r&&!this.options.asyncAlways)return this.getInfo().validationMetaMap[N(t)]?.lastAbortController.abort(),this.state.meta.errors;const n=i?.skipFormValidation?Promise.resolve({}):this.form.validateAsync(t);return this.validateAsync(t,n)},this.handleChange=t=>{this.setValue(t)},this.handleBlur=()=>{this.state.meta.isTouched||this.setMeta(i=>({...i,isTouched:!0})),this.state.meta.isBlurred||this.setMeta(i=>({...i,isBlurred:!0})),this.validate("blur"),this.triggerOnBlurListener()},this.parseValueWithSchema=t=>L.validate({value:this.state.value,validationSource:"field"},t),this.parseValueWithSchemaAsync=t=>L.validateAsync({value:this.state.value,validationSource:"field"},t),this.form=a.form,this.name=a.name,this.timeoutIds={validations:{},listeners:{},formListeners:{}},this.store=new Q({deps:[this.form.store],fn:()=>{const t=this.form.getFieldValue(this.name),i=this.form.getFieldMeta(this.name)??{...W,...a.defaultMeta};return{value:t,meta:i}}}),this.options=a}get state(){return this.store.state}runValidator(a){return ft(a.validate)?L[a.type](a.value,a.validate):a.validate(a.value)}setErrorMap(a){this.setMeta(t=>({...t,errorMap:{...t.errorMap,...a}}))}triggerOnBlurListener(){const a=this.form.options.listeners?.onBlurDebounceMs;a&&a>0?(this.timeoutIds.formListeners.blur&&clearTimeout(this.timeoutIds.formListeners.blur),this.timeoutIds.formListeners.blur=setTimeout(()=>{this.form.options.listeners?.onBlur?.({formApi:this.form,fieldApi:this})},a)):this.form.options.listeners?.onBlur?.({formApi:this.form,fieldApi:this});const t=this.options.listeners?.onBlurDebounceMs;t&&t>0?(this.timeoutIds.listeners.blur&&clearTimeout(this.timeoutIds.listeners.blur),this.timeoutIds.listeners.blur=setTimeout(()=>{this.options.listeners?.onBlur?.({value:this.state.value,fieldApi:this})},t)):this.options.listeners?.onBlur?.({value:this.state.value,fieldApi:this})}triggerOnChangeListener(){const a=this.form.options.listeners?.onChangeDebounceMs;a&&a>0?(this.timeoutIds.formListeners.change&&clearTimeout(this.timeoutIds.formListeners.change),this.timeoutIds.formListeners.change=setTimeout(()=>{this.form.options.listeners?.onChange?.({formApi:this.form,fieldApi:this})},a)):this.form.options.listeners?.onChange?.({formApi:this.form,fieldApi:this});const t=this.options.listeners?.onChangeDebounceMs;t&&t>0?(this.timeoutIds.listeners.change&&clearTimeout(this.timeoutIds.listeners.change),this.timeoutIds.listeners.change=setTimeout(()=>{this.options.listeners?.onChange?.({value:this.state.value,fieldApi:this})},t)):this.options.listeners?.onChange?.({value:this.state.value,fieldApi:this})}}function nt(s){if(s)return s}function N(s){switch(s){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";case"dynamic":return"onDynamic";case"change":default:return"onChange"}}const U=typeof window<"u"?w.useLayoutEffect:w.useEffect;function Nt(s){const[a]=w.useState(()=>{const i=new Kt({...s,form:s.form,name:s.name});return i.Field=mt,i});return U(a.mount,[a]),U(()=>{a.update(s)}),ct(a.store,s.mode==="array"?t=>[t.meta,Object.keys(t.value??[]).length]:void 0),a}const mt=({children:s,...a})=>{const t=Nt(a),i=w.useMemo(()=>_(s,t),[s,t,t.state.value,t.state.meta]);return b.jsx(b.Fragment,{children:i})};function Rt({form:s,selector:a,children:t}){const i=ct(s.store,a);return _(t,i)}function Wt(s){const[a]=w.useState(()=>{const t=new $t(s),i=t;return i.Field=function(r){return b.jsx(mt,{...r,form:t})},i.Subscribe=function(r){return b.jsx(Rt,{form:t,selector:r.selector,children:r.children})},i});return U(a.mount,[]),U(()=>{a.update(s)}),a}function ot({field:s}){return b.jsxs(b.Fragment,{children:[s.state.meta.isTouched&&!s.state.meta.isValid?b.jsx("em",{children:s.state.meta.errors.join(",")}):null,s.state.meta.isValidating?"Validating...":null]})}const Ut=async s=>{if(!(await Ft.expenses.$post({json:s})).ok)throw new Error("server error")};function Ht(){const s=St(),a=ut(),t=Et({mutationFn:Ut,onSuccess:async()=>{await Promise.all([a.invalidateQueries({queryKey:["all-expenses"]}),a.invalidateQueries({queryKey:["total-spent"]})]),s({to:"/expenses"})}}),i=Wt({defaultValues:{title:"",amount:0},onSubmit:({value:e})=>{t.mutate(e)}});return b.jsx("div",{children:b.jsxs("form",{onSubmit:e=>{e.preventDefault(),e.stopPropagation(),i.handleSubmit()},className:"max-w-xl m-auto space-y-4",children:[b.jsx(i.Field,{name:"title",children:e=>b.jsxs(b.Fragment,{children:[b.jsx(st,{htmlFor:"title",children:"Title"}),b.jsx(et,{id:e.name,name:e.name,value:e.state.value,placeholder:"Title",onBlur:e.handleBlur,onChange:r=>e.handleChange(r.target.value)}),b.jsx(ot,{field:e})]})}),b.jsx(i.Field,{name:"amount",children:e=>b.jsxs(b.Fragment,{children:[b.jsx(st,{htmlFor:"amount",children:"Amount"}),b.jsx(et,{id:e.name,name:e.name,value:e.state.value,type:"number",placeholder:"Amount",onBlur:e.handleBlur,onChange:r=>e.handleChange(r.target.valueAsNumber)}),b.jsx(ot,{field:e})]})}),b.jsx(i.Subscribe,{selector:e=>[e.canSubmit,e.isSubmitting],children:([e,r])=>b.jsxs("div",{className:"flex gap-4",children:[b.jsx(tt,{type:"submit",disabled:!e,children:r?"...":"Create Expense"}),b.jsx(tt,{type:"reset",variant:"secondary",onClick:n=>{n.preventDefault(),i.reset()},children:"Reset"})]})})]})})}export{Ht as component};
